"""empty message

Revision ID: bcf19e4b90b1
Revises: f0009b4fae4c
Create Date: 2025-05-09 20:18:02.612021

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = 'bcf19e4b90b1'
down_revision: Union[str, None] = 'f0009b4fae4c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('measure',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ingredient',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id_stock', sa.Integer(), nullable=False),
    sa.Column('id_medida', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_medida'], ['measure.id'], ),
    sa.ForeignKeyConstraint(['id_stock'], ['stock.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('product', schema=None) as batch_op:
        batch_op.add_column(sa.Column('id_stock', sa.Integer(), nullable=False))
        batch_op.create_foreign_key(None, 'stock', ['id_stock'], ['id'])

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('product', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('id_stock')

    op.drop_table('ingredient')
    op.drop_table('measure')
    # ### end Alembic commands ###
